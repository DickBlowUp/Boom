function Game(roomID) {
  var players = [],
      round = 0,
      roomID = roomID,
      word = '';
  return {
    getPlayer: function (id) {
      console.log('getPlayer');
      for (let i = 0; i < players.length; i++) {
        if (players[i].id === id) {
          return players[i];
        }
      }
      return null;
    },
    toggleReady: function (id) {
      console.log('toggleReady');
      let player = null;
      for (let i = 0; i < players.length; i++) {
        if (players[i].id === id) {
          player = players[i];
          break;
        }
      }
      player.ready ? player.ready = false : player.ready = true;
    },
    ifAllReady: function () {
      console.log('ifAllReady');
      players.every((item) => {
        return item.ready === true;
      })
    },
    newPlayer: function (id) {
      console.log('newPlayer');
      if (players.length === 8) {
        socket.emit('error', "room full");
        return
      }
      players.push({
        id: id,
        score: 0
      });
      round += 2;
      socket.join(roomID);
      socket.emit('players', players);
    },
    broadcastNewPlayer: function (id) {
      console.log('broadcastNewPlayer');
      socket.to(roomID).emit('newPlayer', id);
    },
    startGame: function () {
      console.log('startGame');
      if(players.length <= 1){
        console.log('connot start,not enough members');
        return
      }
      socket.to(roomID).emit('startGame');
      this.nextRound();
    },
    nextRound: function () {
      console.log('nextRound');
      round--;
      if (round === 0) {
        this.endGame();
      }
      socket.to(roomID).emit('nextDrawer', this.newDrawer());
      socket.to(roomID).emit('nextWord', this.newWord());
      rooms[roomID].tip = setTimeout(function () {
        socket.to(roomID).emit('nextTip', this.newTip());
      }, 15000);
      rooms[roomID].round = setTimeout(function () {
        socket.to(roomID).emit('nextRound');
        this.nextRound();
      }, 60000);
    },
    nextDrawer: function () {
      console.log('nextDrawer');
      if(round > players.length){
        return players[round - players.length - 1];
      }else{
        return players[round - 1].id;
      }
    },
    newWord: function () {
      console.log('newWord');
      let min = 0,
        max = 2;
      newWord = words[Math.random() * (max - min) + min];
      word = newWord;
      return newWord;
    },
    getAns: function () {
      console.log('getAns');
      return word.word;
    },
    newTip: function () {
      console.log('newTip');
      return rooms[roomID].word.tip;
    },
    endGame: function () {
      console.log('endGame');
      socket.to(roomID).emit('endGame', this.result());
    },
    result: function () {
      console.log('result');
      let score = [];
      players.forEach((item) => {
        let player = {
          id: item.id,
          score: item.score
        };
        score.push(player);
      });
      return score;
    }
  }
}
